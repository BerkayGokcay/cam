# =============================
# File: docker-compose.yml
# =============================
version: "3.9"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    command: server /data --console-address :9001
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

volumes:
  minio-data:


# =============================
# File: .env (örnek)
# =============================
# DeepStream çevresi bu dosyayı okumak zorunda değil; sadece kolaylık için.
PGIE_CONFIG=/opt/models/yolov10_face/pgie_yolov10_face.txt
INFERENCE_INTERVAL=0
FACE_CLASS_ID=0
SAVE_INTERVAL_SECONDS=1.0
MAX_TRACKING_AGE_SECONDS=30
MAX_WORKERS=8

# MinIO
MINIO_HOST=127.0.0.1
MINIO_PORT=9000
MINIO_USER=minioadmin
MINIO_PASS=minioadmin
MINIO_BUCKET=videos-face-detection-v2
RAW_PREFIX=raw-crops/
PROCESSED_PREFIX=processed/

# RabbitMQ
RMQ_URL=amqp://guest:guest@127.0.0.1:5672/%2F
RMQ_QUEUE=faces
RMQ_PREFETCH=32

# Worker
BATCH=16
MAX_WAIT_MS=8
GPU_ID=0
ARCFACE_MODEL=/opt/models/recognition/w600k_r50.onnx


# =============================
# File: requirements.txt
# =============================
# DeepStream Python binding'leri (pyds) NVIDIA imajıyla gelir.
# Aşağıdakiler DS konteynerinin içinde de kurulabilir.
numpy
opencv-python
pika
minio
onnxruntime-gpu
face-alignment
torch
torchvision
